// _preboot.scss
// Variables and mixins

// Variables

// Colors
$select: #fefeca;
$primary: #d00f1a;

// Shades
$bg: #fdfdfd;
$bright: #f2f2f2;
$light: #e3e3e3;
$medium: #858585;
$dim: #474747;
$dark: #1c1c1c;
$black: #101010;

// Typefaces
$serif: "PT Serif", Georgia, Cambria, "Times New Roman", Times, serif;
$sans: "Source Sans Pro", Helvetica, Arial, Verdana, Tahoma, sans-serif;
$mono: Consolas, Monaco, "Courier New", Courier, monospace;

// Transparent
$bg-transparent-light: rgba(255,255,255,.05);
$bg-transparent-dark: rgba(0,0,0,.16);
$bg-transparent-break: rgba(255,255,255,.15);

// Elements
$rule: 1px solid $bg-transparent-break;
$indent: 1.4em;

// Break points
$break-point-one: "screen and (min-width: 900px)";
$break-point-two: "screen and (min-width: 600px)";
$break-point-three: "screen and (max-height: 700px)";

// Grid
$width-max: 900px;
$width: 900;
$col: 88px;
$gut: 28px;

// Baseline
$base: 12px;
$base2: 24px;
$line: 1.55;

// Mixins

// Type sets
@mixin type-sans {
	color: $medium;
	font-family: $sans;
	word-spacing: -.05em;
	line-height: 1.48;
	@include rem('font-size', 14px);
	a {
		color: $medium;
		border-bottom: 1px solid $light;
		&:hover {
			color: $dim;
		}
	}
}
// Clearing floats
@mixin clear {
	zoom: 1;
	&:before, &:after {
		display: table;
		content: "";
	}
	&:after {
		clear: both;
	}
}
.clear {
	@include clear;
}
// Disable selection
@mixin no-select {
	-webkit-user-select:none;
	   -moz-user-select:none;
	   	-ms-user-select:none;
	   		user-select:none;
}
// Border radius
@mixin border-radius($radius: 3px) {
	-webkit-border-radius: $radius;
		 -moz-border-radius: $radius;
			  border-radius: $radius;
}
// Box shadows
@mixin box-shadow($shadow: 0px 0px 3px 3px rgba(0,0,0,.1)) {
	-webkit-box-shadow: $shadow;
		 -moz-box-shadow: $shadow;
			  box-shadow: $shadow;
}
@mixin box-hover($shadow-hover: 0px 0px 3px 3px rgba(0,0,0,.2)) {
	-webkit-box-shadow: $shadow-hover;
		 -moz-box-shadow: $shadow-hover;
			  box-shadow: $shadow-hover;
}
@mixin inner-shadow($shadow-in: inset 0 0 0 1px rgba(255,255,255,.12)) {
	-webkit-box-shadow: $shadow-in;
	   -moz-box-shadow: $shadow-in;
			box-shadow: $shadow-in;
}
// Transitions
@mixin transition($transition) {
	-webkit-transition: $transition;
	   -moz-transition: $transition;
	        transition: $transition;
}
// Rem generator
$baseline-px: 17px;

@mixin rem($property, $px-values) {
	// Convert the baseline into rems
	$baseline-rem: $baseline-px / 1rem;
	// Print the first line in pixel values
	#{$property}: $px-values;
	// If there is only one (numeric) value, return the property/value line for it.
	@if type-of($px-values) == "number" {
		#{$property}: $px-values / $baseline-rem; }
	@else {
		// Create an empty list that we can dump values into
		$rem-values: unquote("");
		@each $value in $px-values {
			// If the value is zero, return 0
			@if $value == 0 {
				$rem-values: append($rem-values, $value); }
			@else {
				$rem-values: append($rem-values, $value / $baseline-rem); } }
		// Return the property and its list of converted values
		#{$property}: $rem-values; } }